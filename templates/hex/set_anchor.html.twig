{% extends "base.html.twig" %}
{% form_theme form _self %}

{% block title %}Edition d'une collection de tuiles{% endblock %}
{% block header_title %}{{ block('title') }}{% endblock %}

{% block content %}
    {{ form(form) }}
{% endblock %}

{% block _form_collection_row %}
    {{ form_widget(form) }}
{% endblock %}

{% block _form_collection_entry_row %}
    <div class="tile-anchor">
        <div class="pure-g">
            <div class="pure-u-1-2 right-text">{{ form_widget(form.anchor[2]) }}</div>
            <div class="pure-u-1-2">{{ form_widget(form.anchor[1]) }}</div>
            <div class="pure-u-1-3 right-text middle">{{ form_widget(form.anchor[3]) }}</div>
            <div class="pure-u-1-3 hexagon">{{ include ('hex/tile/' ~ form.vars.data.filename) }}</div>
            <div class="pure-u-1-3 middle">{{ form_widget(form.anchor[0]) }}</div>
            <div class="pure-u-1-2 right-text">{{ form_widget(form.anchor[4]) }}</div>
            <div class="pure-u-1-2">{{ form_widget(form.anchor[5]) }}</div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('pixabay/auto-complete.css') }}"/> 
    <style>
        .tile-anchor .hexagon {
            text-align: center;
        }
        .tile-anchor {
            padding-top: 0.5em;
            border: 2px solid #ccc;
            margin-bottom: 2em;
        }
        .tile-anchor .middle input {
            margin-top: 5em;
        }
        .right-text input {
            text-align: right;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}  
    <script src="{{ asset('pixabay/auto-complete.min.js') }}"></script>
    <script>
        var widget = document.querySelectorAll('.tile-anchor input')

        widget.forEach(item => {
            new autoComplete({
                minChars: 1,
                delay: 100,
                selector: item,
                source: function (term, response) {
                    let filtered = []
                    let query = new RegExp('^' + term, 'i')
                    widget.forEach(val => {
                        if ((item !== val) && (query.exec(val.value))) {
                            filtered.push(val.value)
                        }
                    })

                    filtered = [...new Set(filtered)]

                    response(filtered)
                }
            })
        })
    </script>
{% endblock %}

