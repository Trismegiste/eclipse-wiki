{% extends 'base.html.twig' %}
{% form_theme append _self %}

{% block title %}{{ append.vars.data.title }}{% endblock %}
{% block header_title %}
    <nav style="float: right">
        <a href="{{ path('app_vertexcrud_show', {pk: append.vars.data.pk}) }}" title="Voir"><i class="icon-eye"></i></a>
    </nav>
    {{ block('title') }}
{% endblock %}

{% block content %}
    <section>
        {{ form(prompt) }}
    </section>
    <section x-data="llm">
        <div x-show="waiting" style="text-align: center"><i class="icon-spin3 animate-spin big-waiting"></i></div>
        <div x-show="content !== ''">
            <hgroup>
                <h2>Ce contenu généré s'ajoutera à {{ append.vars.data.title }}</h2>
                <h3>(Le formatage Markdown sera converti à la volée en formatage Wikitext)</h3>
            </hgroup>
            {{ form(append) }}
        </div>
    </section>
{% endblock %}

{% block _llm_output_append_generation_row %}
    {{ form_widget(form, {attr:{class:'pure-input-1'}}) }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="application/json" id="ollama-payload">
        {{ payload|json_encode()|raw }}
    </script>
    <script type="module">
        Alpine.data('llm', () => ({
                content: '',
                waiting: false,

                async init() {
                    const decoder = new TextDecoder()

                    const payload = JSON.parse(document.getElementById('ollama-payload').textContent)
                    if (payload === null) {
                        return;
                    }

                    this.waiting = true
//this.content = 'yolo'
                    try {
                        const resp = await fetch('http://localhost:11434/api/chat', {
                            method: 'POST',
                            body: JSON.stringify(payload)
                        })

                        const reader = await resp.body.getReader()
                        for (; ; ) {
                            let {value: chunk, done: readerDone} = await reader.read()
                            this.waiting = false
                            if (readerDone) {
                                break
                            }
                            const msg = JSON.parse(decoder.decode(chunk))
                            this.content = this.content.concat(msg.message.content)
                        }
                    } catch (ex) {
                        Alpine.store('notif').push('error', 'Ollama is unreachable : ' + ex.message)
                        this.waiting = false
                        return;
                    }
                }
            }))
    </script>
{% endblock %}
