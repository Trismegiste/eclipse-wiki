{% extends "base.html.twig" %}

{% block title %}{{ vertex.title }}{% endblock %}

{% block header_title %}
    <nav style="float: right">
        {{ include('vertex/actions.html.twig') }}
    </nav>   
    {{ vertex.title }}
{% endblock %}

{% block content %}
    {{ wiki(vertex.content) }}
    {{ include('fragment/wiki_backlinks.html.twig') }}
{% endblock %}

{% block javascripts %}
    {{ parent() }} 
    <script>
        Mousetrap.bind('left', function () {
            location.assign('{{ path('app_vertexcrud_seekprevious', {pk: vertex.pk}) }}')
            return false
        });

        Mousetrap.bind('right', function () {
            location.assign('{{ path('app_vertexcrud_seeknext', {pk: vertex.pk}) }}')
            return false
        });

        Mousetrap.bind('up', function () {
            location.assign('{{ path('app_vertexcrud_list') }}')
            return false
        });

        Mousetrap.bind('e', function () {
            location.assign('{{ path('app_vertexcrud_edit', {pk: vertex.pk}) }}')
            return false
        });

        let pictures = document.querySelectorAll('.thumb a')
        pictures.forEach(function (picture) {
            let url = picture.href
            picture.addEventListener('click', function (event) {
                // stop propagation
                event.preventDefault()
                // post image title for sending to external device
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title: '{{ vertex.title|e('js') }}'
                    })
                }).then(function (response) {
                    if (!response.ok) {
                        return Promise.reject(response)
                    }
                    return response.json()
                }).then(function (json) {
                    pushFlash(picture, 'success', json.message)
                }).catch(function (error) {
                    if (typeof error.json === "function") {
                        error.json().then(function (jsonError) {
                            pushFlash(picture, 'error', jsonError.message)
                        }).catch(function (genericError) {
                            pushFlash(picture, 'error', genericError.statusText);
                        })
                    } else {
                        pushFlash(picture, 'error', error)
                    }
                })
            })
        })

        function pushFlash(elem, level, msg) {
            elem.dispatchEvent(new CustomEvent('flash', {"bubbles": true, detail: {level: level, message: msg}}))
        }
    </script>
{% endblock %}