{% extends "base.html.twig" %}

{% block title %}Instancier un {{ vertex.title }}{% endblock %}
{% set avatarSize = 500 %}

{% block header_title %}
    {# the header menu with title #}
    <nav style="float: right">
        {{ include('npc/actions.html.twig', {npc:vertex}) }}
    </nav>   
    {% block header_big_title %}{{ block('title') }}{% endblock %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('multiavatar/multiavatar.min.js') }}"></script>
    <script src="{{ asset('js/crop-helper.js') }}"></script>
    <script>
        var onTheFly = document.querySelector('form[name=profile_on_the_fly]')
        var avatarSample = document.querySelectorAll('[data-avatar]')
        var hiddenCanvas = document.getElementById('avatar-tmp')

        for (const sample of avatarSample) {
            sample.innerHTML = multiavatar(sample.dataset.avatar)
            // event for sending an avatar
            sample.addEventListener("click", function (e) {
                let data = new FormData(onTheFly)
                data.set('profile_on_the_fly[name]', this.dataset.avatar)

                let imgTmp = new Image()
                let ctx = hiddenCanvas.getContext('2d')

                imgTmp.onload = function () {
                    ctx.drawImage(this, 0, 0)

                    data.set('profile_on_the_fly[avatar]', dataURLtoFile(hiddenCanvas.toDataURL(), 'avatar.png'))
                    fetch(onTheFly.action, {
                        method: 'post',
                        body: data,
                        redirect: 'manual'
                    }).then(function (response) {
                        return response.json()
                    }).then(function (json) {
                        pushFlash(onTheFly, json.level, json.message)
                    })
                }

                imgTmp.src = svgContentToDataUrl(fixSvgDimension(this.innerHTML, {{ avatarSize }}))
            })
        }
    </script>
{% endblock %}

{% block content %}
    <canvas height="{{ avatarSize }}" width="{{ avatarSize }}" id="avatar-tmp" style="display:none">
    </canvas>
    {{ form(form,{attr: {hidden:true}}) }}
    {% for label, gender in listing %}
        <section class="pure-g quick-npc">
            {% for name in gender %}
                <div class="pure-u-1-8">
                    <figure data-avatar="{{ name }}"></figure>
                    <a href="{{ path('app_npcgenerator_createextra', {title: name, template: vertex.pk}) }}"><i class="icon-user-plus"></i>{{ name }}</a>
                </div>
            {% endfor %}
        </section>
    {% endfor %}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .quick-npc {
            text-align: center;
        }
        .quick-npc svg {
            cursor: pointer;
        }
        .quick-npc *[data-avatar] + a {
            padding-bottom: 1em;
            display: block;
        }
    </style>
{% endblock %}