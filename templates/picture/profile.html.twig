{# generate profile picture #}
{% extends "base.html.twig" %}
{% form_theme form _self %}

{% block _profile_pic_avatar_row %}
    {{ block('form_row') }}
    <canvas id="myOutputCanvas" width="231" height="231" style="background-color:lightgray;"></canvas>
    <div id="cropper"></div>
{% endblock %}

{% block header_title %}
    {{ include('npc/menu.html.twig', {npc: form.vars.data}) }}
{% endblock %}

{% block content %}
    <div x-data>
        {{ form(form) }}
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('foliotek/croppie.css') }}" />
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('foliotek/croppie.min.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/@multiavatar/multiavatar/multiavatar.min.js"></script>    
    <script>
        var uploadCrop = new Croppie(document.getElementById('cropper'), {
            viewport: {
                width: 500,
                height: 500,
                type: 'circle'
            },
            boundary: {width: 500, height: 500},
            enableExif: true
        })

        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    uploadCrop.bind({url: e.target.result})
                            .then(function () {
                                console.log('Bind complete')
                            })
                }

                reader.readAsDataURL(input.files[0]);
            } else {
                console.log("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        // sending form in ajax
        document.getElementById('profile_pic_generate').addEventListener('click', function (e) {
            e.preventDefault()
            let uploadForm = document.querySelector('article form')
            let data = new FormData(uploadForm)

            uploadCrop.result('base64').then(function (dataUrl) {
                data.set('profile_pic[avatar]', dataURLtoFile(dataUrl, 'avatar.png'))
                fetch(uploadForm.action, {
                    method: 'post',
                    body: data,
                    redirect: 'manual'
                }).then(function (response) {
                    location.href = '{{ path('app_vertexcrud_show', {pk: form.vars.data.pk}) }}'
                }).catch((error) => {
                    console.error(error);
                })
            })
        }) // fin du form

        // convert a DataURL to File for sending to symfony Form (with CSRF and all)
        function dataURLtoFile(dataurl, filename) {
            var arr = dataurl.split(','),
                    mime = arr[0].match(/:(.*?);/)[1],
                    bstr = atob(arr[1]),
                    n = bstr.length,
                    u8arr = new Uint8Array(n);

            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }

            return new File([u8arr], filename, {type: mime});
        }

        {% if form.vars.data.extractFirstPicture is not empty %}
            uploadCrop.bind({url: '/upload/{{ form.vars.data.extractFirstPicture }}'});
        {% endif %}
    </script>

    <script>
        window.addEventListener("load", function () {
            var myCanvas = document.querySelector('#myOutputCanvas')
            var ctx = myCanvas.getContext('2d')
            var img1 = new Image()
            img1.onload = function () {
                ctx.drawImage(img1, 0, 0)
                uploadCrop.bind({url: myCanvas.toDataURL()})
            }
            var avatarId = 'Binx Bond';
            var svgCode = '<svg xmlns="http://www.w3.org/2000/svg" width="231" height="231" viewBox="0 0 231 231"><path d="M33.83,33.83a115.5,115.5,0,1,1,0,163.34,115.49,115.49,0,0,1,0-163.34Z" style="fill:#884f00;"/><path d="m115.5 51.75a63.75 63.75 0 0 0-10.5 126.63v14.09a115.5 115.5 0 0 0-53.729 19.027 115.5 115.5 0 0 0 128.46 0 115.5 115.5 0 0 0-53.729-19.029v-14.084a63.75 63.75 0 0 0 53.25-62.881 63.75 63.75 0 0 0-63.65-63.75 63.75 63.75 0 0 0-0.09961 0z" style="fill:#ffce73;"/><path d="m88.18 194.11c-4.2079 1.021-8.3545 2.2792-12.42 3.7695v26.072a115.5 115.5 0 0 0 79.48 0v-26.072c-4.0858-1.4904-8.2529-2.7486-12.48-3.7695v8.7051c0 9.3888-7.6112 17-17 17h-20.58c-9.3888 0-17-7.6112-17-17v-8.7051z" style="fill:#ff14e4;"/><path d="m30.622 70.381c2.0971-3.9374 4.6649-7.9604 7.6822-12.037 3.0172-4.0765 6.0987-7.6929 9.2229-10.817l22.897 22.897c-4.4402 4.4403-8.2278 9.5439-11.213 15.14z" style="fill:#14fffd;"/><path d="m160.58 70.423 22.907-22.897c3.1242 3.1242 6.2056 6.7406 9.2229 10.817 3.0065 4.0765 5.5744 8.0994 7.6715 12.037l-28.578 15.182c-2.9851-5.5958-6.7727-10.689-11.224-15.14z" style="fill:#14fffd;"/><path d="m92.411 15.247c3.8197-0.87736 7.6715-1.5407 11.534-1.9794 4.0765-0.46007 7.9282-0.69546 11.555-0.69546 1.53 0 3.1563 0.0428 4.8682 0.1391l1.851 22.255 5.767-21.57c3.1028 0.37449 6.0666 0.86666 8.8912 1.4658l-10.55 49.763c-1.9259-0.41729-3.702-0.70617-5.3176-0.87736-1.423-0.14979-3.2633-0.22468-5.5102-0.22468-2.2362 0-4.237 0.10699-5.981 0.29958-1.9473 0.22469-3.8732 0.55636-5.767 0.99504z" style="fill:#14fffd;"/><path d="m92.411 15.247c1.9152-0.43869 4.023-0.84526 6.3233-1.2304 2.065-0.34238 4.1514-0.62057 6.2698-0.84525l5.1785 50.565c-1.0913 0.10699-2.1827 0.25679-3.2954 0.43868-0.86665 0.14979-1.9152 0.36378-3.1349 0.64196z" style="fill:#0d3a62;"/><path d="m129.31 114.14 20-5.37m-47.66 5.37-20-5.37" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:4.9998px;stroke:#000;"/><path d="m127.84 146.73c-2.24 8.93-6.92 15.08-12.34 15.08s-10.1-6.15-12.34-15.08z" style="fill:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:2.9999px;stroke:#000;"/></svg>'
            //var svgCode = multiavatar(avatarId);
            img1.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgCode)
        })
    </script>    
{% endblock %}

