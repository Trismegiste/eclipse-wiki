{% extends "base.html.twig" %}
{% form_theme form _self %}

{% block title %}Instancier un {{ npc.title }}{% endblock %}

{% block header_title %}
    {# the header menu with title #}
    <nav style="float: right">
        {{ include('npc/actions.html.twig') }}
    </nav>   
    {% block header_big_title %}{{ block('title') }}{% endblock %}
{% endblock %}

{% block _profile_on_the_fly_avatar_row %}
    {% set avatarSize = form.vars.avatar_size %}
    <canvas height="{{ avatarSize }}" width="{{ avatarSize }}" id="avatar-tmp" style="display:none">
    </canvas>
    {{ form_widget(form,{attr: {hidden:true}}) }}
    <div class="pure-g avatar-choice">
        {% set counter=0 %}
        {% if form.vars.default_bitmap is not empty %}
            <div class="pure-u-1-12">
                <input type="radio" name="choice_{{ form.vars.id }}" id="choice_{{ form.vars.id }}_{{ counter }}"/>
                <label class="pixel-avatar" for="choice_{{ form.vars.id }}_{{ counter }}">
                    <img src="{{ path('get_picture', {title: form.vars.default_bitmap}) }}" class="pure-img"/>
                </label>
            </div>
            {% set counter=counter+1 %}
        {% endif %}
        {% for k in 1..form.vars.human_number %}
            <div class="pure-u-1-12">
                <input type="radio" name="choice_{{ form.vars.id }}" id="choice_{{ form.vars.id }}_{{ counter }}"/>
                <label class="vector-avatar human-avatar" for="choice_{{ form.vars.id }}_{{ counter }}">
                </label>
            </div>
            {% set counter=counter+1 %}
        {% endfor %}
        {% for avatar in form.vars.bauhaus %}
            <div class="pure-u-1-12">
                <input type="radio" name="choice_{{ form.vars.id }}" id="choice_{{ form.vars.id }}_{{ counter }}"/>
                <label class="vector-avatar abstract-avatar" for="choice_{{ form.vars.id }}_{{ counter }}">
                    {{ avatar|raw }}
                </label>
            </div>
            {% set counter=counter+1 %}
        {% endfor %}
    </div>

    <script>
        function putCanvasIntoFileInput() {
            const fileInput = document.getElementById('{{ form.vars.id }}')
            let hiddenCanvas = document.getElementById('avatar-tmp')
            let ctx = hiddenCanvas.getContext('2d')
            ctx.drawImage(this, 0, 0)
            // convert to Blob (async)
            hiddenCanvas.toBlob((blob) => {
                const file = new File([blob], "avatar.png")
                const dT = new DataTransfer()
                dT.items.add(file)
                fileInput.files = dT.files
            })
        }

        window.addEventListener('load', () => {
            // All pixel image click
            for (const sample of document.querySelectorAll('.pixel-avatar')) {
                sample.addEventListener("click", function (e) {
                    let imgTmp = new Image()
                    imgTmp.onload = putCanvasIntoFileInput
                    imgTmp.src = this.querySelector('img').src
                })
            }

            // Multiavatar
            for (const sample of document.querySelectorAll('.human-avatar')) {
                sample.innerHTML = multiavatar('yolo' + Math.random())
            }

            // All SVG click
            var avatarSample = document.querySelectorAll('.vector-avatar')
            for (const sample of avatarSample) {
                sample.addEventListener("click", function (e) {
                    let imgTmp = new Image()
                    imgTmp.onload = putCanvasIntoFileInput
                    imgTmp.src = svgContentToDataUrl(fixSvgDimension(this.innerHTML, {{ avatarSize }}))
                })
            }
        })
    </script>        
{% endblock %}

{% block _profile_on_the_fly_title_row %}
    {{ form_widget(form,{attr: {hidden:true}}) }}
    <div class="pure-g human-name">
        {% for label, gender in form.vars.choices %}
            {% for name in gender %}
                <div class="pure-u-1-6 form-widget">
                    <label>
                        <input type="radio" name="choice_{{ form.vars.id }}" value="{{ name }}"/>
                        {{ name }}
                    </label>
                </div>
            {% endfor %}
        {% endfor %}
    </div>   

    <script>
        window.addEventListener('load', () => {
            for (const sample of document.querySelectorAll('.human-name input')) {
                sample.addEventListener("click", function (e) {
                    const widget = document.getElementById('{{ form.vars.id }}')
                    widget.value = e.target.value
                })
            }
        })
    </script>        
{% endblock %}

{% block content %}
    {{ form(form) }}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .avatar-choice input {
            display: none;
        }
        .avatar-choice label {
            padding: 0.3em;
            display: block;
        }
        .avatar-choice input:checked + label, .avatar-choice input:checked + label  {
            background-color: #777;
        }
        .pure-form button {
            margin-top: 1em;
        }
        .pure-form .human-name input[type=radio] {
            margin-bottom: 0.3em;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('multiavatar/multiavatar.min.js') }}"></script>
    <script src="{{ asset('js/crop-helper.js') }}"></script>
{% endblock %}
