{% extends "base.html.twig" %}

{% block title %}Instancier un {{ 'NPC' }}{% endblock %}
{% set avatarSize = 503 %}

{% block content %}
    <canvas height="{{ avatarSize }}" width="{{ avatarSize }}" id="avatar-tmp">
    </canvas>
    {{ form(form) }}
    <section class="pure-g quick-npc">
        <div class="pure-u-1-8">
            <figure class="pixel-avatar">
                <img src="{{ path('get_picture', {title: npc.tokenPic}) }}" class="pure-img"/>
            </figure>
        </div>
        <div class="pure-u-1-8">
            <figure class="vector-avatar woke-avatar">
            </figure>
        </div>
        {% for avatar in bauhaus %}
            <div class="pure-u-1-8">
                <figure class="vector-avatar">
                    {{ avatar|raw }}
                </figure>
                <input type="radio"/>
            </div>
        {% endfor %}
    </section>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        svg {
            width: 100%;
        }
        figure {
            margin: 1em;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('multiavatar/multiavatar.min.js') }}"></script>
    <script src="{{ asset('js/crop-helper.js') }}"></script>
    <script>
        function putCanvasIntoFileInput() {
            const fileInput = document.getElementById('{{ form['avatar'].vars.id }}')
            let hiddenCanvas = document.getElementById('avatar-tmp')
            let ctx = hiddenCanvas.getContext('2d')
            ctx.drawImage(this, 0, 0)
            // convert to Blob (async)
            hiddenCanvas.toBlob((blob) => {
                const file = new File([blob], "avatar.png")
                const dT = new DataTransfer()
                dT.items.add(file)
                fileInput.files = dT.files
            })
        }

        // All pixel image click
        for (const sample of document.querySelectorAll('.pixel-avatar')) {
            sample.addEventListener("click", function (e) {
                let imgTmp = new Image()
                imgTmp.onload = putCanvasIntoFileInput
                imgTmp.src = this.querySelector('img').src
            })
        }

        // Multiavatar
        for (const sample of document.querySelectorAll('.woke-avatar')) {
            sample.innerHTML = multiavatar('yolo')
        }

        // All SVG click
        var avatarSample = document.querySelectorAll('.vector-avatar')
        for (const sample of avatarSample) {
            sample.addEventListener("click", function (e) {
                let imgTmp = new Image()
                imgTmp.onload = putCanvasIntoFileInput
                imgTmp.src = svgContentToDataUrl(fixSvgDimension(this.innerHTML, {{ avatarSize }}))
            })
        }
    </script>
{% endblock %}
