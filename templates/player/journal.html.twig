{# Player log view #}
{% extends "base.html.twig" %}

{% block title %}Player{% endblock %}

{% block body %}
    <div x-data="playerLog('{{ mercure(topic) }}')"
         x-on:dblclick="toggleFullScreen">
        <nav class="pure-menu  pure-menu-horizontal">
            <ul class="pure-menu-list">
                {% set navigation = ['user-circle', 'picture', 'view3d'] %}
                {% for idx, panel in navigation %}
                    <li class="pure-menu-item">
                        <a href="#" class="pure-menu-link">
                            <i class="icon-{{ panel }}" x-on:click="panel={{ idx }}"></i>
                        </a>
                    </li>
                {% endfor %}
            </ul>
        </nav>
        <div x-show="panel===0">
            <div class="swiper"
                 x-ref="gesture"
                 x-on:contextmenu.prevent="saveContent">
                <div class="swiper-wrapper" x-ref="journal">
                    <div class="swiper-slide">Slide 1</div>
                    <div class="swiper-slide">Slide 2</div>
                    <div class="swiper-slide">Slide 3</div>
                </div>
            </div>
        </div>
        <div x-show="panel===1">
            <img x-ref="picture"/>
        </div>
        <div x-show="panel===2">
            BABYLON
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="module">
        import Swiper from 'swiper/swiper-bundle';
        import Manipulation from 'swiper/modules/manipulation';

        Alpine.data('playerLog', (host) => ({
                host: host,
                socket: null,
                swiper: null,
                panel: 0,

                init() {
                    // Socket
                    this.connect()

                    // Swiper
                    this.swiper = new Swiper(this.$refs.gesture, {
                        direction: 'vertical',
                        modules: [Manipulation]
                    })

                    // check if lost websocket connection when focus
                    document.addEventListener('visibilitychange', () => {
                        if (document.visibilityState === 'visible') {
                            if (this.socket.readyState === 2) {
                                this.connect()
                            }
                        }
                    })
                },

                connect() {
                    let url = new URL(this.host)
                    const lastId = localStorage.getItem('lastEventID')
                    if (lastId) {
                        url.searchParams.append('lastEventID', lastId)
                    }
                    this.socket = new EventSource(url)

                    this.socket.onopen = (msg) => {
                        console.log('Connected')
                    }

                    this.socket.onmessage = (msg) => {
                        console.log('New content')
                        const content = document.createElement("div");
                        content.classList = ['swiper-slide']
                        content.dataset.contentId = msg.lastEventId
                        localStorage.setItem('lastEventID', msg.lastEventId)
                        content.innerHTML = msg.data
                        this.swiper.prependSlide(content)
                        this.swiper.slideTo(0, 500)
                    }

                    this.socket.onerror = () => {
                        console.log('Disconnected')
                    }
                },

                toggleFullScreen() {
                    if (!document.fullscreenElement) {
                        document.documentElement.requestFullscreen();
                    } else if (document.exitFullscreen) {
                        document.exitFullscreen();
                    }
                },

                saveContent() {
                    if (window.confirm("Voulez-vous sauver cette page ?")) {
                        // do something with localStorage and innerHTML, indexed with dataset.contentId
                    }
                }

            }))
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>
    <style>
        .swiper {
            width: 100vw;
            height: calc(100vh - 2.2em);
        }

        .swiper img {
            margin: 0 auto;
            max-width: 100vw;
            max-height: 100vh;
            object-fit: contain;
            display: block;
            width: 100%;
        }
    </style>
{% endblock %}

