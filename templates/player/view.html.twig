{# player screen #}
{% extends "base.html.twig" %}

{% block title %}PlayerCast{% endblock %}

{% block body %}
    <div x-data="spa">
        <div class="waiting" x-show="!onAir">
            <i class="icon-spin3 animate-spin"></i>
        </div>        
        <div class="screencast" x-show="onAir">
            <img src="#" x-ref="tv"/>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="module">
        var urlCreator = window.URL || window.webkitURL

        Alpine.data('spa', () => ({
                host: '{{ url_picture }}',
                onAir: false,
                socket: null,
                init() {
                    this.resize()
                    this.connect()
                    // Watch for browser/canvas resize events
                    window.addEventListener("resize", () => {
                        this.resize();
                    })
                    // check if lost websocket connection when focus
                    document.addEventListener('visibilitychange', () => {
                        if (document.visibilityState === 'visible') {
                            if (this.socket.readyState === 3) {
                                this.connect()
                            }
                        }
                    })
                },
                connect() {
                    this.socket = new WebSocket(this.host)
                    this.socket.onopen = (msg) => {
                        console.log('Connecting to ' + this.host)
                        this.onAir = true
                    }

                    this.socket.onmessage = (msg) => {
                        console.log('New picture')
                        this.$refs.tv.src = urlCreator.createObjectURL(msg.data)
                        this.$refs.tv.onload = function () {
                            urlCreator.revokeObjectURL(this.src)
                        }
                    }

                    this.socket.onclose = () => {
                        console.log('Disconnected')
                        this.onAir = false
                    }
                },
                resize() {
                    this.$refs.tv.height = document.documentElement.clientHeight
                    this.$refs.tv.width = document.documentElement.clientWidth
                }
            }))

        Alpine.start()
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .waiting {
            font-size: 15em;
            color: #bbb;
            text-align: center;
        }

        .screencast {
            overflow: hidden;
            display: flex;
            background-color: #bbb;
        }

        img {
            max-width: inherit;
            max-height: inherit;
            object-fit: contain;
        }
    </style>
{% endblock %}
