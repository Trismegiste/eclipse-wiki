{% extends "base.html.twig" %}

{% block content %}
    <canvas id="renderCanvas"></canvas>
    {% endblock %}

{% block javascripts %}
    <script src="https://cdn.babylonjs.com/babylon.js"></script>
    <script>
        const canvas = document.getElementById("renderCanvas"); // Get the canvas element
        const engine = new BABYLON.Engine(canvas, true); // Generate the BABYLON 3D engine
        const createScene = function () {
            // Creates a basic Babylon Scene object
            const scene = new BABYLON.Scene(engine);
            // Creates and positions a free camera
            const camera = new BABYLON.FreeCamera("camera1",
                    new BABYLON.Vector3(0, 5, -10), scene);
            // Targets the camera to scene origin
            camera.setTarget(BABYLON.Vector3.Zero());
            // This attaches the camera to the canvas
            camera.attachControl(canvas, true);
            // Creates a light, aiming 0,1,0 - to the sky
            const light = new BABYLON.HemisphericLight("light",
                    new BABYLON.Vector3(0, 1, 0), scene);
            // Dim the light a small amount - 0 to 1
            light.intensity = 0.7;

            return scene;
        };
        const scene = createScene(); //Call the createScene function


        BABYLON.SceneLoader.RegisterPlugin({
            extensions: ".battlemap",
            importMesh: function (meshesNames, scene, data, rootUrl, meshes, particleSystems, skeletons) {
                return true
            },
            load: function (scene, data, rootUrl) {

                const tile = BABYLON.MeshBuilder.CreateDisc("disc", {tessellation: 6, radius: 2 / 3 - 0.01}, scene);
                tile.rotation.z = Math.PI / 6;
                tile.rotation.x = Math.PI / 2
                tile.isVisible = false
                const myMaterial = new BABYLON.StandardMaterial("industrial", scene);
                myMaterial.diffuseTexture = new BABYLON.Texture("/texture/industrial.webp", scene);
                tile.material = myMaterial;

                const wall = BABYLON.Mesh.CreatePlane("wall", 2/3)
                wall.position.y = 1/3
                wall.position.x = 2/3 * Math.cos(Math.PI / 6)
                wall.rotation.y = Math.PI / 2
                const handle = new BABYLON.TransformNode("room-center")
                wall.parent = handle
                handle.rotation.y = -2 * Math.PI / 3
                handle.position.x = 4/3 * Math.cos(Math.PI / 6)

                const origin = BABYLON.MeshBuilder.CreateSphere('origin', {diameter:0.1})

                const battlemap = JSON.parse(data)
                battlemap.grid.forEach((cell, k) => {
                    const ground = tile.createInstance("ground" + k)
                    ground.position.x = cell.x
                    ground.position.z = cell.y
                })

                return true;
            },
            loadAssets(scene, data, rootUrl) {
                var container = new AssetContainer(scene)
                return container
            }
        });

        BABYLON.SceneLoader.Append("/voronoi/babylon/", "{{ place.pk }}.battlemap", scene, function (scene) {})

        // Register a render loop to repeatedly render the scene
        engine.runRenderLoop(function () {
            scene.render();
        });
        // Watch for browser/canvas resize events
        window.addEventListener("resize", function () {
            engine.resize();
        });
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        #renderCanvas {
            width: 100%;
            height: 100%;
            touch-action: none;
        }
    </style>
{% endblock %}
