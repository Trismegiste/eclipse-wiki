{# Custom rendering for tree with autocompleted wikitext links #}
{% block wiki_tree_widget %}
    <div x-data="wikitree" class="timeline-tree">
        {{ form_widget(form) }}
        <template x-for="(node, index) in tree.getFlatList()" :key="index + node.title">
            <div class="pure-g">
                <div class="pure-u" x-bind:style="{width: node.level*5 + '%'}"></div>
                <div class="pure-u" x-bind:style="{width: (100-node.level*5) + '%'}">
                    <template x-if="node.parent !== null">
                        <div class="dropzone"
                             x-on:dragenter="dropZoneEnter"
                             x-on:dragleave="dropZoneLeave"
                             x-on:dragover="dropZoneOver"
                             x-on:drop="moveNodeBefore"
                             x-bind:data-index="index">
                        </div>
                    </template>
                    <div class="node-content" x-data="nodeAutocomplete">
                        <span x-text="node.title"
                              x-show="editingNode !== index"
                              x-bind:class="{'finished-node': node.finished}"
                              x-bind:draggable="node.parent !== null"
                              x-on:dragstart="nodeDragStart"
                              x-on:dragend="nodeDragEnd"
                              x-on:dragenter="nodeEnter"
                              x-on:dragleave="nodeLeave"
                              x-on:dragover="dropZoneOver"
                              x-on:drop="appendNode"
                              x-bind:data-index="index"></span>
                        <textarea x-show="editingNode === index"
                                  x-ref="editor"
                                  x-model="content"
                                  x-on:keyup="editKeyUp"></textarea>
                        <template x-if="open">
                            <select class="autocomplete-combobox" x-bind:style="caretPos" size="10"
                                    x-model="selected"
                                    x-on:click="choose"
                                    x-on:blur="open=false"
                                    x-on:keyup="comboKeyUp">
                                <template x-for="item in result" :key="item['value']">
                                    <option x-bind="item"></option>
                                </template>
                            </select>
                        </template>
                        <button class="pure-button button-write"
                                x-show="editingNode === index"
                                x-on:click.prevent="confirmEditNode"><i class="icon-edit"></i></button>
                        <button class="pure-button button-delete"
                                x-show="editingNode === index"
                                x-on:click.prevent="cancelEditNode"><i class="icon-edit"></i></button>
                        <button class="pure-button"
                                x-show="editingNode !== index"
                                x-on:click.prevent="editNode"
                                x-bind:data-index="index"
                                x-bind:disabled="node.parent === null"><i class="icon-edit"></i></button>
                        <button class="pure-button"
                                x-on:click.prevent="appendNewChild"
                                x-bind:data-index="index"><i class="icon-newchild"></i></button>
                        <button class="pure-button"
                                x-bind:disabled="node.parent === null"
                                x-on:click.prevent="deleteNode"
                                x-bind:data-index="index"><i class="icon-trash-empty"></i></button>
                        <button class="pure-button"
                                x-on:click.prevent="checkNode"
                                x-bind:data-index="index"><i class="icon-check"></i></button>
                    </div>
                    <template x-if="node.parent !== null">
                        <div class="dropzone"
                             x-on:dragenter="dropZoneEnter"
                             x-on:dragleave="dropZoneLeave"
                             x-on:dragover="dropZoneOver"
                             x-on:drop="moveNodeAfter"
                             x-bind:data-index="index">
                        </div>
                    </template>
                </div>
            </div>
        </template>
    </div>

    <script type="module">
        import buildWikitextClosure from 'wikitext';
        import wikiTreeClosure from 'wikitree';

        let strategy = [
            {
                pattern: /\[\[([^\]]+)$/,
                url: '{{ path('app_vertexcrud_search') }}?q=',
                boundAttr: (entry) => ({
                        ['x-text'] () {
                            return entry
                        }
                    }),
                replace: (found) => {
                    return `[[${found}]]`
                }
            }
        ]

        Alpine.data('wikitree', wikiTreeClosure)
        Alpine.data('nodeAutocomplete', buildWikitextClosure(strategy))
    </script>
{% endblock %}
