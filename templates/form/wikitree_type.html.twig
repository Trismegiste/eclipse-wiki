{# Custom rendering for tree with autocompleted wikitext links #}
{% block wiki_tree_widget %}
    {{ form_widget(form) }}
    <div id="{{ form.vars.id }}_tree" class="tree_widget"></div>
    <script>
        window.addEventListener('load', () => {
            if (typeof SortableTree === "undefined") {
                throw new Error('SortableTree is not included')
            }

            const hiddenTree = document.querySelector('#{{ form.vars.id }}')
            const nodeData = [{{ form.vars.data|raw }}]

            const tree = new SortableTree({
                nodes: nodeData,
                element: document.querySelector('#{{ form.vars.id }}_tree'),
                renderLabel: (data) => {
                    return `<input type="checkbox"/>
                                <span>${data.title}</span>
                                <button class="pure-button"><i class="icon-newchild"></i></button>
                                <button class="pure-button"><i class="icon-trash-empty"></i></button>`
                },
                onChange: ({ nodes, movedNode, srcParentNode, targetParentNode }) => {
                    hiddenTree.value = JSON.stringify(dumpTree(nodes[0]))
                },
                onClick: (event, node) => {

                    node.label.querySelector('span').innerHTML += ' yolo'
                    node.data.title += ' yolo'

                    if (event.target.tagName === 'I') {
                        event.preventDefault()
                        let icon = event.target
                        switch (icon.className) {
                            case 'icon-newchild':
                                console.log(dumpTree(tree.root.querySelector('sortable-tree-node')))
                                break;
                        }
                    }
                }
            })

            function dumpTree(elem) {
                let dump = {data: tree.getNode(elem.id).data, nodes: []}
                for (let child of elem.subnodes) {
                    dump.nodes.push(dumpTree(child))
                }

                return dump
            }
        })
    </script>
{% endblock %}
