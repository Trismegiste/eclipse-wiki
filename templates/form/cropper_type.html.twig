{# Custom rendering for CropperType #}
{% block cropper_row %}
    {{ form_row(form) }}
    <div id="cropper-{{ form.vars.id }}"></div>
    <script type="application/json" id="avatar-size">
        {{ form.vars.avatar_size }}
    </script>
    <script>
        var uploadCrop;
        const avatarSize = JSON.parse(document.getElementById("avatar-size").textContent);
        const cropperWidget = document.getElementById('cropper-{{ form.vars.id }}')
        const fileWidget = document.getElementById('{{ form.vars.id }}')

        window.addEventListener('load', (event) => {
            uploadCrop = new Croppie(cropperWidget, {
                viewport: {
                    width: avatarSize,
                    height: avatarSize,
                    type: 'circle'
                },
                boundary: {width: avatarSize, height: avatarSize},
                enableExif: true
            })
        })

        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    uploadCrop.bind({url: e.target.result})
                            .then(function () {
                                console.log('Bind complete')
                            })
                }

                reader.readAsDataURL(input.files[0]);
            } else {
                console.log("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        cropperWidget.addEventListener('update', event => {
            uploadCrop.result('blob').then(blob => {
                let file = new File([blob], 'avatar.png', {type: "image/png", lastModified: new Date().getTime()}, 'utf-8')
                let container = new DataTransfer()
                container.items.add(file)
                fileWidget.files = container.files
            })
        })

        // Copy-Paste
        window.addEventListener('paste', e => {
            if (e.clipboardData.files.length > 0) {
                uploadCrop.bind(URL.createObjectURL(e.clipboardData.files[0]))
            }
        })

        // default picture
        {% if form.vars.default_picture is not empty %}
            window.addEventListener('load', (event) => {
                uploadCrop.bind({url: '{{ form.vars.default_picture }}'})
            })
        {% endif %}
    </script>
{% endblock %}