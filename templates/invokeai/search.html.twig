{# Search into InvokeAI images #}
{% extends "base.html.twig" %}

{% block title %}InvokeAI Search{% endblock %}
{% block header_title %}{{ block('title') }}{% endblock %}

{% block content %}
    <div x-data="stableDiffusion">
        <section>
            {{ form(form, {attr:{'x-on:submit.prevent': 'search'}}) }}
        </section>
        <h2>Local</h2>
        <section class="pure-g search">
            <div class="pure-u-1" x-show="waiting"><i class="icon-spin3 animate-spin big-waiting"></i></div>
            <template x-for="picture in gallery">
                <div class="pure-u-1-5">
                    <div class="thumbnail">
                        <a x-bind:href="picture.full" target="_blank" x-bind:title="picture.prompt">
                            <img x-bind:src="picture.thumb" class="pure-img"/>
                        </a>
                        <div class="legend" x-text="picture.width"></div>
                    </div>
                </div>
            </template>
        </section>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .search .thumbnail {
            margin-bottom: 1em;
            text-align: center;
        }
        .search img {
            margin: auto;
            max-width: 256px;
            max-height: 256px;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script type="module">
        Alpine.data('stableDiffusion', () => ({
                query: null,
                waiting: false,
                gallery: [],
                async search(event) {
                    this.gallery = []
                    this.waiting = true
                    fetch('/invokeai/ajax/remote/search?q=' + this.query)
                            .then(resp => {
                                if (!resp.ok) {
                                    return Promise.reject(resp.json())
                                }
                                return resp.json()
                            })
                            .then(data => {
                                this.waiting = false
                                this.gallery = data
                            })
                            .catch(failure => {
                                this.waiting = false
                                failure.then(flash => {
                                    Alpine.store('notif').push(flash.level, flash.message)
                                })
                            })
                }
            }))
    </script>
{% endblock %}
