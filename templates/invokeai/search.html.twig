{# Search into InvokeAI images #}
{% extends "base.html.twig" %}

{% block title %}InvokeAI Search{% endblock %}
{% block header_title %}{{ block('title') }}{% endblock %}

{% block content %}
    <div x-data="aggregator">
        <section>
            {{ form(form, {attr:{'x-on:submit.prevent': 'launch'}}) }}
        </section>
        <template x-for="(url, source) in sourceList" :key="source">
            <section class="search" x-data="stableDiffusion(source, url)" x-on:search.window="search">
                <h2 x-text="source" x-bind:id="'gallery-' + source"></h2>
                <div class="pure-g">
                    <div class="pure-u-1" x-show="waiting"><i class="icon-spin3 animate-spin big-waiting"></i></div>
                    <template x-for="picture in gallery" :key="picture.thumb">
                        <div class="pure-u-1-5">
                            <div class="thumbnail">
                                {% block picture %}
                                    <a x-bind:href="picture.full" target="_blank" x-bind:title="picture.prompt">
                                        <img x-bind:src="picture.thumb" class="pure-img"/>
                                    </a>
                                    <div class="legend" x-text="picture.width"></div>
                                {% endblock %}
                            </div>
                        </div>
                    </template>
                </div>
            </section>
        </template>
    </div>
{% endblock %}

{% block info %}
    <nav class="pure-menu">
        <ul class="pure-menu-list">
            <li class="pure-menu-item">
                <a class="pure-menu-link" href="#gallery-local">Local</a>
                <a class="pure-menu-link" href="#gallery-remote">Remote</a>
            </li>
        </ul>
    </nav>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .search .thumbnail {
            margin-bottom: 1em;
            text-align: center;
        }
        .search img {
            margin: auto;
            max-width: 256px;
            max-height: 256px;
        }
        .search h2 {
            text-transform: capitalize;
        }
        .info {
            position: sticky;
            top: 0.5em;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="module">
        Alpine.data('aggregator', () => ({
                query: null,
                sourceList: {},

                async launch(event) {
                    this.$el.dispatchEvent(new CustomEvent('search', {bubbles: true, detail: {query: this.query}}))
                }
            }))

        Alpine.data('stableDiffusion', (source, url) => ({
                source: source,
                url: url,
                waiting: false,
                gallery: [],

                async search(event) {
                    this.gallery = []
                    this.waiting = true
                    try {
                        const resp = await fetch(this.url + '?q=' + event.detail.query)
                        if (!resp.ok) {
                            throw new Error(this.source, {cause: await resp.json()})
                        }
                        this.gallery = await resp.json()
                    } catch (error) {
                        const flash = error.cause
                        Alpine.store('notif').push(flash.level, flash.message)
                    } finally {
                        this.waiting = false
                    }
                }
            }))
    </script>
{% endblock %}
