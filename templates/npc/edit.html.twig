{% extends "base.html.twig" %}
{% form_theme form _self %}

{% block header_title %}PNJ : {{ form.vars.data.name }} {% if form.vars.data.wildCard %}<i class="icon-wildcard"></i>{% endif %}{% endblock %}

{% block _npc_stats_edges_widget %}
    <div id="npc_stats_edges" x-data="{
        removeEdge(k) { 
            edges.splice(k, 1) 
        },
         moveEdgeUp(idx) {
            if (idx > 0) {
                let tmp = edges[idx-1]; 
                edges[idx-1] = edges[idx]; 
                edges[idx] = tmp; 
            }
         },
         moveEdgeDown(idx) {
            if (idx < (edges.length-1)) {
                let tmp = edges[idx+1]; 
                edges[idx+1] = edges[idx]; 
                edges[idx] = tmp; 
            }
         }
    }">
        <template x-for="(edge, idx) in edges">
            <div class="pure-g">
                <div class="pure-u-1-3"><label x-text="edge.name"></label></div>
                <div class="pure-u-7-24">
                    <input x-bind:name="'npc_stats[edges][' + idx + '][name]'" type="hidden" required="required" x-model="edge.name"/>
                    <select x-bind:name="'npc_stats[edges][' + idx + '][origin]'" required="required" x-model="edge.origin">
                        <option value="Progression">Progression</option>
                        <option value="Background">Background</option>
                        <option value="Faction">Faction</option>
                        <option value="Création">Création</option>
                        <option value="Morphe">Morphe</option>
                        <option value="Slot">Slot</option>
                        <option value="Cadeau">Cadeau</option>
                    </select>
                </div>
                <nav class="pure-u-1-8">
                    <a x-on:click="moveEdgeUp(idx)"><i class="icon-angle-circled-up"></i></a>
                </nav>
                <nav class="pure-u-1-8">
                    <a x-on:click="moveEdgeDown(idx)"><i class="icon-angle-circled-down"></i></a>
                </nav>
                <nav class="pure-u-1-8">
                    <a x-on:click="removeEdge(idx)"><i class="icon-trash-empty"></i></a>
                </nav>
            </div>
        </template>
    </div>
{% endblock %}

{% block _npc_stats_hindrances_widget %}
    <div id="npc_stats_hindrances" x-data="{
        removeHindrance(k) { 
            hindrances.splice(k, 1) 
        }
    }">
        <template x-for="(hindrance, idx) in hindrances">
            <div class="pure-g">
                <div class="pure-u-1-3"><label x-text="hindrance.name"></label></div>
                <div class="pure-u-1-4">
                    <template x-if="1 == hindrance.choices">
                        <label class="fakeselect">Mineur<input type="hidden" x-bind:name="'npc_stats[hindrances][' + idx + '][level]'" x-model="hindrance.choices"/></label>
                    </template>
                    <template x-if="2 == hindrance.choices">
                        <label class="fakeselect">Majeur<input type="hidden" x-bind:name="'npc_stats[hindrances][' + idx + '][level]'" x-model="hindrance.choices"/></label>
                    </template>
                    <template x-if="3 == hindrance.choices">
                        <select x-bind:name="'npc_stats[hindrances][' + idx + '][level]'" required="required" x-model="hindrance.level">
                            <option value="1">Mineur</option>
                            <option value="2">Majeur</option>
                        </select>
                    </template>
                </div>                
                <div class="pure-u-1-4">
                    <input x-bind:name="'npc_stats[hindrances][' + idx + '][name]'" type="hidden" required="required" x-model="hindrance.name"/>
                    <select x-bind:name="'npc_stats[hindrances][' + idx + '][origin]'" required="required" x-model="hindrance.origin">
                        <option value="Background">Background</option>
                        <option value="Création">Création</option>
                        <option value="Morphe">Morphe</option>
                        <option value="Donné par le MJ">Donné par le MJ</option>
                    </select>
                </div>
                <nav class="pure-u-1-6">
                    <a x-on:click="removeHindrance(idx)"><i class="icon-trash-empty"></i></a>
                </nav>
            </div>
        </template>
    </div>
{% endblock %}


{% block content %}
    <div class="pure-g">
        <div class="pure-u-1-3">
            {{ include('fragment/background_detail.html.twig', {background: form.vars.data.background}) }}
        </div>
        <div class="pure-u-1-3">
            {{ include('fragment/faction_detail.html.twig', {faction: form.vars.data.faction}) }}
        </div>
        <div class="pure-u-1-3">
            {{ include('fragment/morph_detail.html.twig', {morph: form.vars.data.morph}) }}
        </div>
    </div>
    {{ form(form, {attr: {'x-data': form.vars.data|json_encode()}}) }}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>

        document.addEventListener('DOMContentLoaded', function () {

            // link checkbox to listing
            [...document.querySelectorAll('#npc_stats_skill_list input[type=checkbox]')].forEach(function (item) {

                // check the checkbox if the same skill in the listing
                if (document.querySelector('#npc_stats_skills input[type=hidden][value="' + item.value + '"]') !== null) {
                    item.checked = true
                }

                // Add event listener on checkbox
                item.addEventListener('change', function (ev) {

                    const key = ev.target.id.match(/.+_(\d+)$/)[1]
                    const skillName = ev.target.value

                    if (ev.target.checked) {
                        // Append skill
                        const collectionHolder = document.querySelector('#npc_stats_skills')

                        collectionHolder.innerHTML += collectionHolder
                                .dataset
                                .prototype
                                .replace(/__name__/g, Math.floor(100 + 1000000 * Math.random()))
                                .replace(/__undefined__/g, skillName)
                    } else {
                        // Delete skill
                        document.querySelector('#npc_stats_skills input[type=hidden][value="' + skillName + '"]').parentNode.parentNode.remove()
                    }
                })
            })
        })
    </script>
{% endblock %}