# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    generator:
        - [chinese, chinese]
        - [english, chinese]
        - [japanese, japanese]
        - [random, chinese]
        - [chinese, random]
        - [random, random]
    websocket_port: 9000

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # MongoDB
    app.mwpage.repository:
        class: Trismegiste\Strangelove\MongoDb\Repository
        factory: ['@mongodb.factory', 'create']
        arguments: ['mwpage']
    Trismegiste\Strangelove\MongoDb\Repository $pageRepo: '@app.mwpage.repository'
                     
    App\Repository\VertexRepository:
        $collectionName: 'vertex'

    # CLI
    App\Command\CheckDatabase:
        $dbName: '%mongodb.dbname%'
        $man: '@mongodb'            

    # WIKI
    App\Service\MediaWiki:
        arguments:
            $host: '%env(resolve:WIKISOURCE)%'

    App\Service\LocalInterwiki:
        arguments:
            $host: '%env(resolve:WIKISOURCE)%'            
                        
    App\Twig\MediaWikiExtension:
        arguments:
            $src: '%env(resolve:WIKISOURCE)%'
            
    Mike42\Wikitext\WikitextParser:
        arguments:
            - '@App\Twig\LinkRender'
            
    # PDF
    app.wikiparser.pdf:
        class: Mike42\Wikitext\WikitextParser
        arguments:
            - '@App\Twig\PdfLinkRender'
            
    App\Twig\PdfWikiParserExtension:
        $wikiParser: '@app.wikiparser.pdf'

    App\Service\DocumentBroadcaster:
        $cacheDir: '%kernel.cache_dir%'

    # CACHE    
    App\Service\MwImageCache:
        $cacheDir: '%kernel.cache_dir%'
        
    App\Service\PlayerCastCache:
        $cacheDir: '%kernel.cache_dir%'
            
    # Open AI
    App\Service\OpenAi:
        arguments:
            $secret: '%env(resolve:OPENAI_SECRETKEY)%'
            $engine: 'davinci'
            
   # FLAT FILE
    app.choicetype.repository:
        class: App\Repository\YamlRepository
        arguments: 
            $path: '%kernel.project_dir%/database/choicetype.yml'
            
    # Picture
    App\Service\AvatarMaker:
        arguments:
            $socNetFolder: '%kernel.project_dir%/public/socnet'

    # Custom Types
    App\Form\Type\FullTextChoice:
        arguments:
            $repo: '@app.choicetype.repository'

    App\Form\Type\RandomNameType:
        arguments:
            $yaml: '%kernel.project_dir%/database/place_names.yml'

    # Websocket
    App\Service\WebsocketPusher:
        arguments:
            $websocketPort: '%websocket_port%'   
            
    # Storage
    App\Service\Storage:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $env: '%kernel.environment%'
            
    App\Repository\MapRepository:
        arguments:
            $template: '%twig.default_path%/map/config'

    App\Command\LoginLink:
        arguments:
            $loginLinkHandler: '@security.authenticator.login_link_handler.main'

    # Map
    App\Repository\TileProvider:
        - '%twig.default_path%/voronoi/tile'